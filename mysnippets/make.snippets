snippet	skel "C++ base Makefile"
TARGET = ${1:target}

# Listing all sources
SOURCES = $(wildcard *.cpp)

CXXFLAGS = -std=c++11
# depended libraries
LFLAGS = $0

all: $(TARGET)

.PHONY : clean distclean cscope run
clean:
	rm -f $(TARGET) $(SOURCES:.cpp=.o)

distclean:
	rm -f $(TARGET) $(SOURCES:.cpp=.o) $(SOURCES:.cpp=.d)

run: $(TARGET)
	@-./$(TARGET)

# TARGET depends on ".o"s, where every .cpp metioned in SOURCES are substituted into a .o
$(TARGET): $(SOURCES:.cpp=.o)
	$(CXX) -g -o $@ $^ $(LFLAGS)

# Every .d contains the header files which the correspending .cpp depends on
# In gnu make, as of a sub makefile, this rule will automatic checked on the next include command
%.d: %.cpp
	@set -e; rm -f $@; \
	$(CC) -MM $(CXXFLAGS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

# Include ".d"s for each .cpp
-include $(SOURCES:.cpp=.d)
endsnippet
